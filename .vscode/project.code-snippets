{
  // Place your great-britain-rising workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "Create service": {
    "prefix": "coreService",
    "body": [
      "local ${TM_FILENAME_BASE} = {}",
      "${TM_FILENAME_BASE}.__index = ${TM_FILENAME_BASE}",
      "",
      "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
      "local coreShared = ReplicatedStorage:WaitForChild(\"coreShared\")",
      "local coreAssets = ReplicatedStorage:WaitForChild(\"coreAssets\")",
      "",
      "function ${TM_FILENAME_BASE}:init()",
      "\tprint(\"[\".. script.Parent.Name .. \"][\".. script.Name .. \"] Initializing...\")",
      "\tself:Start()",
      "end",
      "",
      "function ${TM_FILENAME_BASE}:Start()",
      "\tprint(\"[\".. script.Parent.Name .. \"][\".. script.Name .. \"] Started\")",
      "end",
      "",
      "return ${TM_FILENAME_BASE}"
    ],
    "description": "Create a new service"
  },
  "Insert a packages": {
    "prefix": "corePackage",
    "body": [
      "local ${1:NAME} = ReplicatedStorage:WaitForChild(\"coreShared\"):WaitForChild(\"packages\")"
    ],
    "description": "Call a core package folder"
  },
  "Call a packages": {
    "prefix": "package",
    "body": [
      "local ${1:NAME} = require(corePackages:WaitForChild(\"${2:NAME}\"))"
    ],
    "description": "Require a package"
  },
  "Log": {
    "prefix": "log",
    "body": [
      "print(\"[\".. script.Parent.Name .. \"][\".. script.Name .. \"] Log:: \")"
    ],
    "description": "Logs a message to the game console"
  }
}
